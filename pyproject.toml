[tool.poetry]
name        = "anchoral"
version     = "0.2.0"
description = "AnchorAL: Anchored Active Learning for Large Imbalanced Datasets"
authors     = [ "Pietro Lesci <pietrolesci@outlook.com>" ]
license     = "Apache-2.0"
readme      = "README.md"
packages    = [ { include = "src" } ]


[tool.poetry.dependencies]
python    = ">=3.9,<3.10"
energizer = { path = "./energizer/", develop = true }

# lightning
# https://github.com/python-poetry/poetry/issues/6409#issuecomment-1572612891
torch = { url = "https://download.pytorch.org/whl/cu118/torch-2.0.0%2Bcu118-cp39-cp39-linux_x86_64.whl", platform = "linux", python = ">=3.9 <3.10" }
# need this because sentence-transformers installs torchvision with CUDA 11.7
torchvision           = { url = "https://download.pytorch.org/whl/cu118/torchvision-0.15.0%2Bcu118-cp39-cp39-linux_x86_64.whl", platform = "linux", python = ">=3.9 <3.10" }
lightning             = { git = "https://github.com/Lightning-AI/lightning.git" }
torchmetrics          = { git = "https://github.com/Lightning-AI/torchmetrics.git" }
sentence-transformers = "^2.2.2"

# hydra
omegaconf               = "^2.3.0"
hydra-core              = "^1.3.2"
hydra-colorlog          = "^1.2.0"
hydra-joblib-launcher   = "^1.2.0"
hydra-submitit-launcher = "^1.2.0"
colorlog                = "^6.7.0"

# plots
matplotlib = "^3.6.3"
seaborn    = "^0.12.2"
tabulate   = "^0.9.0"
altair     = "^5.0.1"

# analysis
openpyxl   = "^3.1.1"
tbparse    = "^0.0.7"
polars     = "^0.18.2"
duckdb     = "^0.8.1"
ipykernel  = "^6.20.2"
ipywidgets = "7.7.1"

# dev
black  = "^22.12.0"
nbqa   = "^1.6.1"
isort  = "^5.11.4"
nvitop = "^1.0.0"
ruff   = "^0.0.286"


[tool.black]
line-length = 120
skip-string-normalization = false
target-version = [ 'py39' ]
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''


[tool.isort]
multi_line_output              = 3
include_trailing_comma         = true
force_grid_wrap                = 0
use_parentheses                = true
ensure_newline_before_comments = true
line_length                    = 120
skip_gitignore                 = true


[build-system]
requires      = [ "poetry-core" ]
build-backend = "poetry.core.masonry.api"


[tool.ruff]
# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.
# select = ["E", "F"]
select = [
    # pyflakes
    "F",
    # pycodestyle
    "E",
    "W",
    # flake8-2020
    "YTT",
    # flake8-bugbear
    "B",
    # flake8-quotes
    "Q",
    # flake8-debugger
    "T10",
    # flake8-gettext
    "INT",
    # pylint
    "PL",
    # misc lints
    "PIE",
    # flake8-pyi
    "PYI",
    # tidy imports
    "TID",
    # implicit string concatenation
    "ISC",
    # type-checking imports
    "TCH",
    # comprehensions
    "C4",
    # pygrep-hooks
    "PGH",
    # Ruff-specific rules
    "RUF",
    # flake8-bandit: exec-builtin
    "S102",
    # numpy-legacy-random
    "NPY002",
    # Perflint
    "PERF",
    # flynt
    "FLY",
    # flake8-logging-format
    "G",
]
ignore = [
    # Logging statement uses f-string
    "G004",
    # Function definitions that include too many arguments (>5)
    "PLR0913",
    # Comparison to `True` should be `cond is True` or `if cond:`
    "E712",
    # blanket-type-ignore
    "PGH003",
]

# Allow autofix for all enabled rules (when `--fix`) is provided.
# fix = true
# fixable = ["A", "B", "C", "D", "E", "F", "G", "I", "N", "Q", "S", "T", "W", "ANN", "ARG", "BLE", "COM", "DJ", "DTZ", "EM", "ERA", "EXE", "FBT", "ICN", "INP", "ISC", "NPY", "PD", "PGH", "PIE", "PL", "PT", "PTH", "PYI", "RET", "RSE", "RUF", "SIM", "SLF", "TCH", "TID", "TRY", "UP", "YTT"]
unfixable = [  ]

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Same as Black.
line-length = 120

# Allow unused variables when underscore-prefixed.
# dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.9
target-version = "py39"

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10
